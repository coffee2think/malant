/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-01 05:58:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.model.vo.Board;
import java.util.ArrayList;
import board.model.vo.Comment;
import member.model.vo.Member;

public final class boardMainList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/board/../../views/common/sidebar.jsp", Long.valueOf(1693547731051L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("board.model.vo.Comment");
    _jspx_imports_classes.add("board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

ArrayList<Board> list = (ArrayList<Board>) request.getAttribute("list");


      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>MalantBoardMain</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("	href=\"/malant/resources/board/css/boardcontents.css\">\r\n");
      out.write("<style>\r\n");
      out.write(".like-style{\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("}\r\n");
      out.write(".board-item {\r\n");
      out.write("	margin-left: 100px;\r\n");
      out.write("}\r\n");
      out.write(".board-date-image {\r\n");
      out.write("    width: 250x; /* 이미지의 너비를 조절 */\r\n");
      out.write("    height:350px; /* 이미지의 높이를 조절 */\r\n");
      out.write("}\r\n");
      out.write(".bdlist {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	width : 400px;\r\n");
      out.write("	height: 200px;\r\n");
      out.write("	margin-left: 450px;\r\n");
      out.write("}\r\n");
      out.write(".board-like {\r\n");
      out.write("	margin-left: 300px; \r\n");
      out.write("}\r\n");
      out.write("div#hashlist{\r\n");
      out.write("	margin-left: 550px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	padding: 10px 15px;\r\n");
      out.write("	gap: 200px; /* 요소 간격을 설정 */\r\n");
      out.write("	font-size: 50px; /* 글자 크기를 크게 조정 */\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write(".hash {\r\n");
      out.write("	color: #ff5733; /* 원하는 색상으로 변경 */\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("a{\r\n");
      out.write("text-decoration-line: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"/malant/resources/common/js/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function() {\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: \"/malant/btoplike\",\r\n");
      out.write("        type: \"get\",\r\n");
      out.write("        dataType: \"json\",\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("            var str = JSON.stringify(data);\r\n");
      out.write("            var json = JSON.parse(str);\r\n");
      out.write("  \r\n");
      out.write("            values = \"<div class='board-like'>\";\r\n");
      out.write("            for (var i in json.blist) {\r\n");
      out.write("                values += \"<div class='board-item' id='bno-\" + json.blist[i].bno + \"'>\"\r\n");
      out.write("                    + \"<a onclick='checkLogin(\"+ json.blist[i].bno +\");'>\"\r\n");
      out.write("                    + \"<img class='image-style' src=\" + decodeURIComponent(json.blist[i].bphoto) + \"></a>\"\r\n");
      out.write("                    + \"<div class='like-style' id='blike-\" + json.blist[i].bno + \"'>\"\r\n");
      out.write("                    + json.blist[i].blike\r\n");
      out.write("                    + \"</div><div>\"\r\n");
      out.write("                    + \"<button class='likeBtn-style' onclick='likeCount(\" + json.blist[i].bno + \");'></button>\"\r\n");
      out.write("                    + decodeURIComponent(json.blist[i].btitle)\r\n");
      out.write("                    + \"<img class='title-style' src='\" + decodeURIComponent(json.blist[i].bprofile) + \"'>\" \r\n");
      out.write("                    + \"</div>\" \r\n");
      out.write("                    + \"</div>\" ; \r\n");
      out.write("            }\r\n");
      out.write("            values += \"</div>\";\r\n");
      out.write("            $('#toplist').html(values);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $.ajax({\r\n");
      out.write("    	url : \"/malant/btophash\",\r\n");
      out.write("    	type: \"get\",\r\n");
      out.write("        dataType: \"json\",\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("        	var str = JSON.stringify(data);\r\n");
      out.write("            var json = JSON.parse(str);\r\n");
      out.write("            var values = \"\"; \r\n");
      out.write("    		  \r\n");
      out.write("            for (var i in json.hlist){\r\n");
      out.write("              	 values += \"<a href='/malant/views/board/boardHashList.jsp'>\";\r\n");
      out.write("              	 values += \"<div class='hash'>\" + \"#\"+ decodeURIComponent(json.hlist[i].hashContent);\r\n");
      out.write("              	 values += \"</div></a>\";\r\n");
      out.write("             \r\n");
      out.write("              }\r\n");
      out.write("    		   $('#hashlist').html(values);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: \"/malant/bdlist\",\r\n");
      out.write("        type: \"get\",\r\n");
      out.write("        dataType: \"json\",\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("            var str = JSON.stringify(data);\r\n");
      out.write("            var jsonData = JSON.parse(str);\r\n");
      out.write("            var values = \"\";\r\n");
      out.write("            console.log(\"success : \" + jsonData);\r\n");
      out.write("            console.log(jsonData);\r\n");
      out.write("          \r\n");
      out.write("            values += \"<div class='bdlist'>\";\r\n");
      out.write("            var itemsPerColumn = Math.ceil(jsonData.dlist.length / 3); // 열당 이미지 수\r\n");
      out.write("            var columnIndex = 0; // 현재 열 인덱스\r\n");
      out.write("\r\n");
      out.write("            for (var i in jsonData.dlist) {\r\n");
      out.write("             \r\n");
      out.write("			\r\n");
      out.write("              	values += \"<div class='board-all'>\";\r\n");
      out.write("                values += \"<div class='board-item'>\";\r\n");
      out.write("                values += \"<a href='/malant/views/board/boardDetailList.jsp'>\";\r\n");
      out.write("                values += \"<img class='board-date-image' src='\" + jsonData.dlist[i].bphoto + \"'></a></div>\";\r\n");
      out.write("                values += \"<div class='like-style' id='d-\" + jsonData.dlist[i].bno + \"'>\";\r\n");
      out.write("                values += \"<div>\";\r\n");
      out.write("                values += \"<button class='likeBtn-style' onclick='likeCountDate(\" + jsonData.dlist[i].bno + \");'></button>\";\r\n");
      out.write("                values += \"<span id='dlike-\" + jsonData.dlist[i].bno + \"'>\" + jsonData.dlist[i].blike + \"</span>\";\r\n");
      out.write("                values += \"<img class='title-style' src='\" + decodeURIComponent(jsonData.dlist[i].bprofile) + \"'>\";\r\n");
      out.write("                values += decodeURIComponent(jsonData.dlist[i].btitle);\r\n");
      out.write("                values += \"</div>\";\r\n");
      out.write("                values += \"</div>\"; \r\n");
      out.write("                values += \"<a href='/malant/views/board/boardDetailList.jsp'>\";       \r\n");
      out.write("                values += \"<div id='comment-area-\"+ jsonData.dlist[i].bno +\"'>\";\r\n");
      out.write("                values += decodeURIComponent(jsonData.dlist[i].ccontent);\r\n");
      out.write("                values += \"</div></a>\";\r\n");
      out.write("            	\r\n");
      out.write("                values += \"</div>\";\r\n");
      out.write("            }\r\n");
      out.write("            values += \"</div>\";\r\n");
      out.write("            $('#dlist').html(values);\r\n");
      out.write("        },\r\n");
      out.write("        error: function(jqXHR, textStatus, errorThrown) {\r\n");
      out.write("        	console.log(\"error : \" + jqXHR + \", \" + textStatus + \", \" + errorThrown);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("function likeCount (boardNo){  \r\n");
      out.write("	$.ajax({\r\n");
      out.write("		 url: \"/malant/bbtn\",\r\n");
      out.write("	     type: \"get\",\r\n");
      out.write("	     dataType: \"text\",\r\n");
      out.write("	     data : {\r\n");
      out.write("	    	'boardNo': boardNo\r\n");
      out.write("	     },\r\n");
      out.write("	     success  : function(data){\r\n");
      out.write("	    	 $(\"#blike-\" + boardNo).text(parseInt($(\"#blike-\" + boardNo).text()) + 1);\r\n");
      out.write("	     }\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("function likeCountDate (boardNo){  \r\n");
      out.write("	$.ajax({\r\n");
      out.write("		 url: \"/malant/bbtn\",\r\n");
      out.write("	     type: \"get\",\r\n");
      out.write("	     dataType: \"text\",\r\n");
      out.write("	     data : {\r\n");
      out.write("	    	'boardNo': boardNo\r\n");
      out.write("	     },\r\n");
      out.write("	     success  : function(data){\r\n");
      out.write("	    	 $(\"#dlike-\" + boardNo).text(parseInt($(\"#dlike-\" + boardNo).text()) + 1);\r\n");
      out.write("	     }\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div>\r\n");
      out.write("	<div class=\"board-main\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			");
      out.write('\n');

	Member loginMember = (Member) session.getAttribute("loginMember");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/common/css/sidebar.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/common/css/font.css\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"sidebar\">\n");
      out.write("		<div class=\"sidebar-header\">\n");
      out.write("			<span class=\"sidebar-title\"><a href=\"/malant\"> <img\n");
      out.write("					src=\"/malant/resources/common/images/main_tilte.gif\" alt=\"식물 검색\" /></a></span>\n");
      out.write("		</div>\n");
      out.write("		<section>\n");
      out.write("			<ul id=\"new_categories\">\n");
      out.write("				<li><a href=\"/malant\">식물 검색</a></li>\n");
      out.write("				<li><a href=\"/malant/views/board/boardMainList.jsp\">커뮤니티</a></li>\n");
      out.write("				<li><a \n");
      out.write("				");
 if(loginMember == null) { 
      out.write("\n");
      out.write("					href=\"/malant/views/member/loginPage.jsp\"\n");
      out.write("				");
 }else { 
      out.write("\n");
      out.write("					href=\"/malant/mplist?user_no=");
      out.print( loginMember.getUserNo() );
      out.write("\"\n");
      out.write("				");
 } 
      out.write(">다이어리</a></li>\n");
      out.write("				<li><a href=\"/malant/views/map/mapMain.jsp\">전국 식물원</a></li>\n");
      out.write("				<li><a href=\"/malant/smplist\">스토어</a></li>\n");
      out.write("				<li><a href=\"/malant/views/notice/noticeMainList.jsp\">공지/이벤트</a></li>\n");
      out.write("			</ul>\n");
      out.write("		</section>\n");
      out.write("		<!-- 로그인 영역 -->\n");
      out.write("		");
 if (loginMember == null) { // 로그인하지 않았을 때 
      out.write("\n");
      out.write("			<div class=\"login-section\">\n");
      out.write("				<hr solid color=\"#ddd\" />\n");
      out.write("				<div class=\"login-box\" onclick=\"location.href='/malant/views/member/loginPage.jsp;'\">\n");
      out.write("					로그인하러 가기\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<!-- 회원가입/아이디/비밀번호 찾기 영역 -->\n");
      out.write("			<div class=\"account-section\">\n");
      out.write("				<a href=\"/malant/views/member/enrollMember.jsp\" class=\"account-link\">회원가입</a><span class=\"login-divide\">|</span>\n");
      out.write("				<!-- 아이디/비밀번호 찾기는 새창을 띄워 진행 -->\n");
      out.write("				<a href=\"#\" class=\"account-link\" onclick=\"window.open('/malant/findAccount.jsp?find=id', '_blank', 'width=900, height=1000');\">아이디찾기</a><span class=\"login-divide\">|</span>\n");
      out.write("				<a href=\"#\"	class=\"account-link\" onclick=\"window.open('/malant/findAccount.jsp?find=pwd', '_blank', 'width=900, height=1000');\">비밀번호재설정</a>\n");
      out.write("			</div>\n");
      out.write("		");
 } else { 
      out.write("\n");
      out.write("			<div class=\"login-section\">\n");
      out.write("				");
      out.print( loginMember.getNickname() );
      out.write("님 환영합니다.<br>\n");
      out.write("				\n");
      out.write("				<a href=\"/malant/views/member/confirmMemberBeforeInfo.jsp?userid=");
      out.print( loginMember.getUserId() );
      out.write("\">마이페이지</a> &nbsp; \n");
      out.write("				<a href=\"/malant/logout\">로그아웃</a>\n");
      out.write("			</div>\n");
      out.write("		");
 } 
      out.write("\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("		var member = '");
      out.print( loginMember );
      out.write("';\r\n");
      out.write("		function checkLogin(boardNo){\r\n");
      out.write("			if (member != 'null'){ ");
      out.write("\r\n");
      out.write("				if (confirm(\"로그인 하시겠습니까?\")) {\r\n");
      out.write("					window.location.href = \"/malant/views/member/loginPage.jsp\";\r\n");
      out.write("				} \r\n");
      out.write("			}else{\r\n");
      out.write("				location.href=\"/malant/bdetail?bno=\" + boardNo;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		</script>\r\n");
      out.write("		<div id=\"toplist\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("   		 <div id=\"hashlist\"></div>\r\n");
      out.write("   		 <div id=\"dlist\"></div>\r\n");
      out.write("   		\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
