/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-01 03:46:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;

public final class memberInfoPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/member/../../views/common/sidebar.jsp", Long.valueOf(1693531849280L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	Member member = (Member) request.getAttribute("member");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원 정보 보기</title>\r\n");
      out.write("<script src=\"/malant/resources/common/js/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	.container {\r\n");
      out.write("		display: flex;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.content {\r\n");
      out.write("		border: 1px solid red;\r\n");
      out.write("		width: 500px;\r\n");
      out.write("		height: 600px;\r\n");
      out.write("		display : flex;\r\n");
      out.write("  		align-items : center;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("		margin: auto;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.vertical-align-center {\r\n");
      out.write("		vertical-align : middle;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("	function changeNicknameBoxState() {\r\n");
      out.write("		$('#nickname').attr('disabled', !$('#nickname').attr('disabled'));\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function changeEmailBoxState() {\r\n");
      out.write("		$('#email').attr('disabled', !$('#email').attr('disabled'));\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function changePwdBoxState() {\r\n");
      out.write("		$('.password').attr('disabled', !$('.password').attr('disabled'));\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 유효성 검사 */\r\n");
      out.write("	function validate() {\r\n");
      out.write("		var pwd = $('#newpwd');\r\n");
      out.write("		var pwd2 = $('#newpwd2');\r\n");
      out.write("		var email = $('#email');\r\n");
      out.write("		var nickname = $('#nickname');\r\n");
      out.write("		\r\n");
      out.write("		console.log(\"id : \" + $('#userid').val());\r\n");
      out.write("		console.log(\"email : \" + email.val());\r\n");
      out.write("		console.log(\"pwd : \" + pwd.val());\r\n");
      out.write("		console.log(\"pwd2 : \" + pwd2.val());\r\n");
      out.write("\r\n");
      out.write("		var pwd_rgx = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,}$/;\r\n");
      out.write("\r\n");
      out.write("		/* 닉네임 유효성 검사 */\r\n");
      out.write("		console.log(\"nickname disabled : \" + nickname.attr('disabled'));\r\n");
      out.write("		if(nickname.attr('disabled') != \"disabled\") {\r\n");
      out.write("			var name_len = nickname.val().length;\r\n");
      out.write("			if(name_len < 2 || name_len > 8) {\r\n");
      out.write("				alert(\"닉네임은 2글자 이상이여야 합니다.\");\r\n");
      out.write("				nickname.select();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		/* 비밀번호 유효성 검사 */\r\n");
      out.write("		console.log(\"pwd disabled : \" + pwd.attr('disabled'));\r\n");
      out.write("		if(pwd.attr('disabled') != \"disabled\") {\r\n");
      out.write("			var pwd_len = pwd.val().length;\r\n");
      out.write("\r\n");
      out.write("			console.log(\"pwd : \" + pwd.val() + \", pwd2 : \" + pwd2.val());\r\n");
      out.write("			console.log(\"pwd_len : \" + pwd.val().length + \", pwd2_len : \" + pwd2.val().length);\r\n");
      out.write("			\r\n");
      out.write("			if(pwd.val() != pwd2.val()) {\r\n");
      out.write("				alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("				pwd2.select();\r\n");
      out.write("				return false;\r\n");
      out.write("			} else if(!pwd_rgx.test(pwd.val())) {\r\n");
      out.write("				alert(\"비밀번호는 영문/숫자/특수문자를 모두 포함하고, 8글자 이상이여야 합니다.\");\r\n");
      out.write("				pwd.select();\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		console.log(\"email.attr('disabled') : \" + email.attr('disabled'));\r\n");
      out.write("		\r\n");
      out.write("		if(email.attr('disabled') != \"disabled\") {\r\n");
      out.write("			if(dupCheck()) {\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function dupCheck() {\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: '/malant/checkdup',\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			data: {\r\n");
      out.write("				userid: $('#userid').val(),\r\n");
      out.write("				email: $('#email').val()\r\n");
      out.write("			},\r\n");
      out.write("			dataType: \"json\",\r\n");
      out.write("			async: false,\r\n");
      out.write("			success: function(data) {\r\n");
      out.write("				console.log(\"dupid : \" + data.dupid);\r\n");
      out.write("				console.log(\"dupemail : \" + data.dupemail);\r\n");
      out.write("				if(data.dupemail != \"ok\") {\r\n");
      out.write("					alert('이미 존재하는 이메일입니다.');\r\n");
      out.write("					return true;\r\n");
      out.write("				} else {\r\n");
      out.write("					alert('사용 가능한 이메일입니다.');\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error: function(jqXHR, textStatus, errorThrown){\r\n");
      out.write("				console.log(\"error : \" + jqXHR + \", \" + textStatus + \", \" + errorThrown);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	// 기존 비밀번호와 새 비밀번호가 일치하는지 검사하는 함수. 나중에 추가할것\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<!-- 사이드바 -->\r\n");
      out.write("		<div class=\"sidebar-container\">\r\n");
      out.write("			");
      out.write('\n');

	Member loginMember = (Member) session.getAttribute("loginMember");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/common/css/sidebar.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/common/css/font.css\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"sidebar\">\n");
      out.write("		<div class=\"sidebar-header\">\n");
      out.write("			<span class=\"sidebar-title\"><a href=\"/malant\"> <img\n");
      out.write("					src=\"/malant/resources/common/images/main_tilte.gif\" alt=\"식물 검색\" /></a></span>\n");
      out.write("		</div>\n");
      out.write("		<section>\n");
      out.write("			<ul id=\"new_categories\">\n");
      out.write("				<li><a href=\"/malant\">식물 검색</a></li>\n");
      out.write("				<li><a href=\"/malant/views/board/boardMainList.jsp\">커뮤니티</a></li>\n");
      out.write("				<li><a \n");
      out.write("				");
 if(loginMember == null) { 
      out.write("\n");
      out.write("					href=\"/malant/views/member/loginPage.jsp\"\n");
      out.write("				");
 }else { 
      out.write("\n");
      out.write("					href=\"/malant/mplist?user_no=");
      out.print( loginMember.getUserNo() );
      out.write("\"\n");
      out.write("				");
 } 
      out.write(">다이어리</a></li>\n");
      out.write("				<li><a href=\"\">전국 식물원</a></li>\n");
      out.write("				<li><a href=\"/malant/views/store/storeMain.jsp\">스토어</a></li>\n");
      out.write("				<li><a href=\"/malant/views/notice/noticeMainList.jsp\">공지/이벤트</a></li>\n");
      out.write("			</ul>\n");
      out.write("		</section>\n");
      out.write("		<!-- 로그인 영역 -->\n");
      out.write("		");
 if (loginMember == null) { // 로그인하지 않았을 때 
      out.write("\n");
      out.write("			<div class=\"login-section\">\n");
      out.write("				<hr solid color=\"#ddd\" />\n");
      out.write("				<div class=\"login-box\" onclick=\"location.href='/malant/views/member/loginPage.jsp;'\">\n");
      out.write("					로그인하러 가기\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			<!-- 테스트 -->\n");
      out.write("			<a onclick=\"checkLogin();\">상세보기 이동</a>\n");
      out.write("			\n");
      out.write("			<script>\n");
      out.write("				function checkLogin(boardNo) {\n");
      out.write("					if(loginMember != null) {\n");
      out.write("						alert(\"로그인 했음\");\n");
      out.write("					} else {\n");
      out.write("						alert(\"로그인 안했음.\");\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("\n");
      out.write("			</script>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			<!-- 회원가입/아이디/비밀번호 찾기 영역 -->\n");
      out.write("			<div class=\"account-section\">\n");
      out.write("				<a href=\"/malant/views/member/enrollMember.jsp\" class=\"account-link\">회원가입</a><span class=\"login-divide\">|</span>\n");
      out.write("				<!-- 아이디/비밀번호 찾기는 새창을 띄워 진행 -->\n");
      out.write("				<a href=\"#\" class=\"account-link\" onclick=\"window.open('/malant/findAccount.jsp?find=id', '_blank', 'width=900, height=1000');\">아이디찾기</a><span class=\"login-divide\">|</span>\n");
      out.write("				<a href=\"#\"	class=\"account-link\" onclick=\"window.open('/malant/findAccount.jsp?find=pwd', '_blank', 'width=900, height=1000');\">비밀번호재설정</a>\n");
      out.write("			</div>\n");
      out.write("		");
 } else { 
      out.write("\n");
      out.write("			<div class=\"login-section\">\n");
      out.write("				");
      out.print( loginMember.getNickname() );
      out.write("님 환영합니다.<br>\n");
      out.write("				\n");
      out.write("				<a href=\"/malant/views/member/confirmMemberBeforeInfo.jsp?userid=");
      out.print( loginMember.getUserId() );
      out.write("\">마이페이지</a> &nbsp; \n");
      out.write("				<a href=\"/malant/logout\">로그아웃</a>\n");
      out.write("			</div>\n");
      out.write("		");
 } 
      out.write("\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<!-- 회원 정보 페이지 -->\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("			<form action=\"/malant/mupdate\" method=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("				<input type=\"hidden\" id=\"userid\" name=\"userid\" value=\"");
      out.print( loginMember.getUserId() );
      out.write("\">\r\n");
      out.write("				<table class=\"info-table\" border=\"1\" cellspacing=\"0\" cellpadding=\"1\">\r\n");
      out.write("					<tr><th>아이디</th><td colspan=\"2\">");
      out.print( member.getUserId() );
      out.write("</td></tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>닉네임</th>\r\n");
      out.write("						<td><input type=\"text\" id=\"nickname\" name=\"nickname\" value=\"");
      out.print( loginMember.getNickname() );
      out.write("\" maxlength=\"8\" placeholder=\"");
      out.print( loginMember.getNickname() );
      out.write("\" disabled></td>\r\n");
      out.write("						<td><input type=\"button\" class=\"nick-change-btn\" value=\"변경\" onclick=\"return changeNicknameBoxState();\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>이메일</th>\r\n");
      out.write("						<td><input type=\"text\" id=\"email\" name=\"email\" value=\"");
      out.print( loginMember.getEmail() );
      out.write("\" placeholder=\"");
      out.print( loginMember.getEmail() );
      out.write("\" disabled></td>\r\n");
      out.write("						<td><input type=\"button\" class=\"email-change-btn\" value=\"변경\" onclick=\"return changeEmailBoxState();\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>새 비밀번호</th>\r\n");
      out.write("						<td><input type=\"password\" class=\"password\" id=\"newpwd\" name=\"newpwd\" maxlength=\"25\" disabled></td>\r\n");
      out.write("						<td rowspan=\"2\"><input type=\"button\" class=\"pwd-change-btn\" value=\"변경\" onclick=\"return changePwdBoxState();\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>비밀번호 확인</th>\r\n");
      out.write("						<td colspan=\"2\"><input type=\"password\" class=\"password\" id=\"newpwd2\" name=\"newpwd2\" maxlength=\"25\" disabled></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					\r\n");
      out.write("					<tr><th rowspan=\"2\">수신 설정</th><td colspan=\"2\"><label><input type=\"checkbox\" id=\"check-alarm\" name=\"check_alarm\"\r\n");
      out.write("					");
 if(member.getAlarmYn().equals("Y")) { 
      out.write("\r\n");
      out.write("						checked\r\n");
      out.write("					");
 } 
      out.write("\r\n");
      out.write("					>관리 알림 메일</label></td></tr>\r\n");
      out.write("					<tr><td colspan=\"2\"><label><input type=\"checkbox\" id=\"check-notice\" name=\"check_notice\"\r\n");
      out.write("					");
 if(member.getNoticeYn().equals("Y")) { 
      out.write("\r\n");
      out.write("						checked\r\n");
      out.write("					");
 } 
      out.write("\r\n");
      out.write("					>공지사항 및 이벤트 소식</label></td></tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th colspan=\"3\">\r\n");
      out.write("							<input type=\"button\" value=\"회원탈퇴\" onclick=\"javascript: location.href = ''\"> &nbsp; &nbsp; &nbsp; \r\n");
      out.write("							<input type=\"submit\" value=\"변경하기\">\r\n");
      out.write("						</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
