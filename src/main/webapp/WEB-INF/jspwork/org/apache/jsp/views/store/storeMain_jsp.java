/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-01 05:48:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.store;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import store.main.model.vo.MainContent;
import store.product.model.vo.ProductDetail;
import java.util.ArrayList;

public final class storeMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/store/common/storeSidebar.jsp", Long.valueOf(1693547215179L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("store.main.model.vo.MainContent");
    _jspx_imports_classes.add("store.product.model.vo.ProductDetail");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

ArrayList<MainContent> mlist = (ArrayList<MainContent>) request.getAttribute("mlist");
ArrayList<MainContent> plist = (ArrayList<MainContent>) request.getAttribute("plist");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("<title>Malant Store</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/common/css/font.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/store/css/storeMain.css\" />\r\n");
      out.write("<script src=\"/malant/resources/common/js/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".body {\r\n");
      out.write("	font-family: \"NanumGothicEB\";\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	$(document)\r\n");
      out.write("			.ready(\r\n");
      out.write("					function() {\r\n");
      out.write("\r\n");
      out.write("	\r\n");
StringBuilder imageUrls = new StringBuilder();
for (MainContent m : mlist) {
	imageUrls.append("\"").append(m.getBannerImage()).append("\",");
}
if (imageUrls.length() > 0) {
	imageUrls.deleteCharAt(imageUrls.length() - 1); // 마지막 쉼표 제거
}
      out.write("\r\n");
      out.write("	// 이미지 슬라이더 설정\r\n");
      out.write("						var currentIndex = 0;\r\n");
      out.write("						var images = [\r\n");
      out.print(imageUrls.toString());
      out.write("\r\n");
      out.write("	];\r\n");
      out.write("						var slider = $(\".image-slider img\");\r\n");
      out.write("\r\n");
      out.write("						function showImage(index) {\r\n");
      out.write("							slider.hide();\r\n");
      out.write("							slider.eq(index).fadeIn();\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						function nextSlide() {\r\n");
      out.write("							currentIndex = (currentIndex + 1) % images.length;\r\n");
      out.write("							showImage(currentIndex);\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						// 슬라이더 초기화\r\n");
      out.write("						showImage(currentIndex);\r\n");
      out.write("\r\n");
      out.write("						// 자동 슬라이딩 시작\r\n");
      out.write("						var slideInterval = setInterval(nextSlide, 3000);\r\n");
      out.write("					});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<!-- 사이드바 -->\r\n");
      out.write("		");
      out.write('\r');
      out.write('\n');

	ArrayList<ProductDetail> pdetail = (ArrayList<ProductDetail>) request.getAttribute("list");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"/malant/resources/store/css/storeSidebar.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/malant/resources/common/css/font.css\" />\r\n");
      out.write("<script src=\"/malant/resources/common/js/jquery-3.7.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  window.onload = function() {\r\n");
      out.write("    const sidebar = document.querySelector('.sidebar');\r\n");
      out.write("\r\n");
      out.write("    window.addEventListener('scroll', function() {\r\n");
      out.write("    	const topOffset = 0;\r\n");
      out.write("        const scrollTop = window.scrollY;\r\n");
      out.write("        const contentTop = document.querySelector('.content').offsetTop;\r\n");
      out.write("        const sidebarHeight = sidebar.clientHeight;\r\n");
      out.write("        const contentHeight = document.querySelector('.content').clientHeight;\r\n");
      out.write("        const maxTop = contentTop + contentHeight - sidebarHeight;\r\n");
      out.write("        const newTop = Math.max(topOffset, Math.min(maxTop, scrollTop));\r\n");
      out.write("        sidebar.style.top = newTop + 'px';\r\n");
      out.write("    });\r\n");
      out.write("  };\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"sidebar\">\r\n");
      out.write("		<div class=\"sidebar-header\">\r\n");
      out.write("			<span class=\"sidebar-title\"> <span class=\"back-to-main\"><a\r\n");
      out.write("					href=\"/malant/index.jsp\"><img\r\n");
      out.write("						src=\"/malant/resources/store/images/gotomain.gif\"></a></span> <a\r\n");
      out.write("				href=\"/malant/views/store/storeMain.jsp\"> <img\r\n");
      out.write("					src=\"/malant/resources/store/images/store_tilte.gif\" alt=\"스토어메인\" /></a></span>\r\n");
      out.write("		</div>\r\n");
      out.write("		<section>\r\n");
      out.write("			<ul id=\"new_categories\">\r\n");
      out.write("				<div id = \"plant-button\" onclick=\"javascript:location.href='/malant/plist?categoryid=plant';\">\r\n");
      out.write("				<li><a>식&nbsp;&nbsp;&nbsp;물</a></li>\r\n");
      out.write("				</div>\r\n");
      out.write("				<li><a>화&nbsp;&nbsp;&nbsp;분</a></li>\r\n");
      out.write("				<li><a>자갈/모래/흙</a></li>\r\n");
      out.write("				<li><a>영양제/비료</a></li>\r\n");
      out.write("				<li><a>식물조명</a></li>\r\n");
      out.write("				<li><a>기&nbsp;&nbsp;&nbsp;타</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</section>\r\n");
      out.write("		<!-- 로그인 영역 -->\r\n");
      out.write("		<div class=\"login-section\">\r\n");
      out.write("			<hr solid color=\"#ddd\" />\r\n");
      out.write("			<span id=\"logintext\"><h4>로그인</h4></span> <input type=\"text\"\r\n");
      out.write("				placeholder=\"아이디\" /> <input type=\"password\" placeholder=\"비밀번호\" /><br />\r\n");
      out.write("			<button class=\"login-button\">로그인</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 회원가입/아이디/비밀번호 찾기 영역 -->\r\n");
      out.write("		<div class=\"account-section\">\r\n");
      out.write("			<a href=\"#\" class=\"account-link\">회원가입</a><span class=\"login-divide\">|</span><br />\r\n");
      out.write("			<a href=\"#\" class=\"account-link\">아이디찾기</a><span class=\"login-divide\">|</span><br />\r\n");
      out.write("			<a href=\"#\" class=\"account-link\">비밀번호찾기</a><br />\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("			<!-- 이미지 슬라이더 -->\r\n");
      out.write("			<div class=\"image-slider\">\r\n");
      out.write("				");

				for (MainContent m : mlist) {
				
      out.write("\r\n");
      out.write("				<a href=\"");
      out.print(m.getBannerLink());
      out.write("\"> <img class=\"banner-image\"\r\n");
      out.write("					src=\"");
      out.print(m.getBannerImage());
      out.write("\"></a>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<br> <br>\r\n");
      out.write("			<h2>전체 상품</h2>\r\n");
      out.write("			<hr color=\"#9CB4D4\">\r\n");
      out.write("			<br>\r\n");
      out.write("			<!--  컨텐츠 영역 -->\r\n");
      out.write("			<div class=\"productcontainer\">\r\n");
      out.write("				");

				for (MainContent p : plist) {
				
      out.write("\r\n");
      out.write("				<div class=\"product-card\" onclick=\"javascript:location.href='/malant/pdetail?productid=");
      out.print( p.getProductId() );
      out.write("';\">\r\n");
      out.write("					<img class=\"product-image\" src=\"");
      out.print(p.getProductThumbnail());
      out.write("\">\r\n");
      out.write("					<div class=\"product-name\">");
      out.print(p.getProductName());
      out.write("</div>\r\n");
      out.write("					<div class=\"product-price\">");
      out.print(p.getPrice() + "원");
      out.write("</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				");

					}
				
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
